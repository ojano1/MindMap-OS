/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, see the repository of this plugin.
*/
"use strict";var T=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var D=Object.prototype.hasOwnProperty;var j=(t,e)=>{for(var n in e)T(t,n,{get:e[n],enumerable:!0})},C=(t,e,n,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of B(e))!D.call(t,i)&&i!==n&&T(t,i,{get:()=>e[i],enumerable:!(a=E(e,i))||a.enumerable});return t};var O=t=>C(T({},"__esModule",{value:!0}),t);var _={};j(_,{default:()=>f});module.exports=O(_);var m=require("obsidian");var p=require("obsidian");function y(t=new Date){let e=t.getTimezoneOffset();return new Date(t.getTime()-e*60*1e3).toISOString().slice(0,10)}function x(t,e){let n=(0,p.normalizePath)(e);return t.vault.getAbstractFileByPath(n)??null}async function d(t,e){let n=(0,p.normalizePath)(e).split("/"),a="";for(let i of n)a=a?`${a}/${i}`:i,t.vault.getAbstractFileByPath(a)||await t.vault.createFolder(a)}async function o(t,e,n){let a=(0,p.normalizePath)(e);x(t,a)||(await d(t,a.split("/").slice(0,-1).join("/")),await t.vault.create(a,n))}async function b(t,e,n){let a=(0,p.normalizePath)(e),i=x(t,a);if(!i)return await d(t,a.split("/").slice(0,-1).join("/")),t.vault.create(a,n);if(i instanceof p.TFile)return t.vault.modify(i,n)}var N=(t,e,n)=>t.split(e).join(n),L=(t=new Date)=>t.toLocaleDateString("en-US",{day:"2-digit",month:"short",year:"numeric"});function G(t){let e=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate())),n=e.getUTCDay()||7;e.setUTCDate(e.getUTCDate()+4-n);let a=new Date(Date.UTC(e.getUTCFullYear(),0,1));return Math.ceil(((e.getTime()-a.getTime())/864e5+1)/7)}function U(t){return t.replace(/[\\/:*?"<>|]/g,"").trim()}async function H(t,e,n=".md"){let a=(0,m.normalizePath)(e+n),i=1;for(;t.vault.getAbstractFileByPath(a);)a=(0,m.normalizePath)(`${e} (${i})${n}`),i++;return a}function I(t,e={}){let n=new Date,a={"{{date}}":y(n),"{{dateLong}}":L(n),"{{year}}":String(n.getFullYear()),"{{monthShort}}":n.toLocaleString("en-US",{month:"short"}),"{{isoWeek}}":String(G(n)),"{{quarter}}":String(Math.floor(n.getMonth()/3)+1),...e},i=t;for(let r in a)i=N(i,r,a[r]);return i}function v(t){return{task:["\u{1F4CC}","Task"],project:["\u{1F680}","Project"],goal:["\u{1F3AF}","Goal"],habit:["\u{1F504}","Habit"],note:["\u270F\uFE0F","Note"],area:["\u{1F331}","Area"]}[t]}async function W(t,e){let n=(0,m.normalizePath)(`03 SaveBox/Templates/${v(e)[1]} Template.md`),a=t.vault.getAbstractFileByPath(n),i=(0,m.normalizePath)(`99 Templates/${v(e)[1]}.md`),r=t.vault.getAbstractFileByPath(i),l=a??r;return l&&l instanceof m.TFile?await t.vault.read(l):""}async function w(t,e,n){let[a,i]=v(e),r="03 SaveBox/Active";await d(t,r);let l=U(n)||"Untitled",S=`${r}/${a}${i} - ${l}`,P=await H(t,S),h=await W(t,e);h||(h=`---
status: Active
done: false
---

# ${a}${i} - ${l}

- [ ] ${a}${i} - ${l}

> created {{date}}
`),h=I(h,{"{{title}}":`${a}${i} - ${l}`,"{{kind}}":i,"{{emoji}}":a,"{{core}}":l});let A=await t.vault.create(P,h);return await t.workspace.getLeaf(!0).openFile(A),new m.Notice(`${i} created: ${l}`),A}var s=require("obsidian");var k=require("obsidian");var c={area:`---
status: Active
priority: Medium
---
# \u{1F331}Area - Example

### \u270D\uFE0FDescription
- 
`,goal:`---
status: Active
priority: Medium
done: false
---
# \u{1F3AF}Goal - Example
- [ ] \u{1F3AF}Goal - Example
`,project:`---
status: Active
priority: Medium
done: false
---
# \u{1F680}Project - Example
- [ ] \u{1F680}Project - Example
`,task:`---
status: Active
priority: Medium
done: false
duration_hours:
---
# \u{1F4CC}Task - Example
- [ ] \u{1F4CC}Task - Example
`,habit:`---
status: Active
---
# \u{1F501}Habit - Example

### \u270D\uFE0FLog
- [ ] \u{1F501}Habit - Example {{date}}
`,note:`---
created: {{date}}
note_type: note
status: Active
---
# \u270F\uFE0FNote - Example
- 
`,daily:`# {{dateLong}}

### \u270D\uFE0FFleeting Notes
- 
`,weekly:`# \u{1F4C5} Week {{isoWeek}} {{year}}

> Assign due dates to tasks tagged with this week.
`,monthly:`# \u{1F4C5} {{monthShort}} {{year}}

> Tag projects/tasks with #{{monthShort}}.
`,quarterly:`# \u{1F4C5} Q{{quarter}} {{year}}

> Tag projects with #Q{{quarter}}.
`,yearly:`# \u{1F4C5} Year {{year}}

> Tag goals with #Y{{year}} and projects with #Q1..#Q4.
`};async function M(t){let e=["01 Definition","02 Execution/1 Daily","02 Execution/2 Weekly","02 Execution/3 Monthly","02 Execution/4 Quarterly","02 Execution/5 Yearly","03 SaveBox/Active","03 SaveBox/Archive","03 SaveBox/Attachment","03 SaveBox/Scripts","03 SaveBox/Templates","04 Output","99 System"];for(let n of e)await d(t,n);await o(t,"Welcome.md",`# \u{1F44B} Welcome to MindMap OS

Run **Command Palette \u2192 MindMap OS: Create Starter Structure** any time.`),await o(t,"01 Definition/\u{1F3C1} Start Here.md",`## Start Here

Follow the steps to define Areas \u2192 Goals \u2192 Projects.`),await o(t,"01 Definition/\u{1F9E0} Mind Map.md",`## Mind Map

Link Areas, Goals, Projects here.`),await o(t,"02 Execution/\u{1F50D} Read Me First.md",`## Execution Flow

Year \u2192 Quarter \u2192 Month \u2192 Week \u2192 Day. Assign tags and due dates.`),await o(t,"04 Output/Untitled.md",`# Output

Export or publish here.`),await o(t,"03 SaveBox/Templates/Area Template.md",c.area),await o(t,"03 SaveBox/Templates/Goal Template.md",c.goal),await o(t,"03 SaveBox/Templates/Project Template.md",c.project),await o(t,"03 SaveBox/Templates/Task Template.md",c.task),await o(t,"03 SaveBox/Templates/Habit Template.md",c.habit),await o(t,"03 SaveBox/Templates/Note Template.md",c.note),await o(t,"03 SaveBox/Templates/Daily Template.md",c.daily),await o(t,"03 SaveBox/Templates/Weekly Template.md",c.weekly),await o(t,"03 SaveBox/Templates/Monthly Template.md",c.monthly),await o(t,"03 SaveBox/Templates/Quarterly Template.md",c.quarterly),await o(t,"03 SaveBox/Templates/Yearly Template.md",c.yearly),await o(t,"03 SaveBox/Active/\u{1F331}Area - Life.md",`---
status: Active
---
# \u{1F331}Area - Life
`),await o(t,"03 SaveBox/Active/\u{1F3AF}Goal - Launch v1.md",`---
status: Active
done: false
---
# \u{1F3AF}Goal - Launch v1
- [ ] \u{1F3AF}Goal - Launch v1
`),await o(t,"03 SaveBox/Active/\u{1F680}Project - Landing Page.md",`---
status: Active
done: false
---
# \u{1F680}Project - Landing Page
- [ ] \u{1F680}Project - Landing Page
`),await o(t,"03 SaveBox/Active/\u{1F4CC}Task - Draft copy.md",`---
done: false
---
# \u{1F4CC}Task - Draft copy
- [ ] \u{1F4CC}Task - Draft copy
`),await o(t,"99 System/Home.md",["# Welcome to MindMap OS","","- Run: **MindMap OS \u2192 Create Starter Structure**","- Try: **MindMap OS \u2192 New Goal / Project / Task**","- Try: **MindMap OS \u2192 Open Today**",""].join(`
`)),new k.Notice("\u2705 MindMap OS: starter structure updated.")}var g=require("obsidian");function z(t,e){return t.toLocaleDateString("en-US",e)}function F(t=new Date){return z(t,{day:"2-digit",month:"short",year:"numeric"})}function R(t=new Date){let e="02 Execution/1 Daily",n=`${F(t)}.md`;return(0,g.normalizePath)(`${e}/${n}`)}async function $(t){let e=R();await d(t,e.split("/").slice(0,-1).join("/"));let n=`# ${F()}

### \u270D\uFE0F Fleeting Notes
- 
`;await b(t,e,n);let a=t.vault.getAbstractFileByPath(e);if(a&&a instanceof g.TFile)return await t.workspace.getLeaf(!0).openFile(a),a;throw new Error("Failed to create/open today's note.")}function Y(t){return t.replace(/[\\/:*?"<>|]/g,"").trim()}async function q(t,e){let n=(0,s.normalizePath)(e).split("/"),a="";for(let i of n)a=a?`${a}/${i}`:i,t.vault.getAbstractFileByPath(a)||await t.vault.createFolder(a)}async function Q(t,e,n=".md"){let a=(0,s.normalizePath)(`${e}${n}`),i=1;for(;t.vault.getAbstractFileByPath(a);)a=(0,s.normalizePath)(`${e} (${i})${n}`),i++;return a}async function K(t,e){let n="03 SaveBox/Active";await q(t,n);let a=Y(e)||"Untitled",i=`${n}/\u{1F4CC}Task - ${a}`,r=await Q(t,i),l=`---
status: Active
priority: Medium
done: false
duration_hours:
---

# \u{1F4CC}Task - ${a}

- [ ] \u{1F4CC}Task - ${a}

> created ${y()}
`,S=await t.vault.create(r,l);await t.workspace.getLeaf(!0).openFile(S),new s.Notice(`Task created: ${a}`)}var u=class extends s.Modal{constructor(n,a){super(n);this.opts=a;this.value=""}onOpen(){let{contentEl:n}=this;n.empty(),n.createEl("h3",{text:this.opts.title});let a=null;new s.Setting(n).addText(i=>{a=i.inputEl,i.setPlaceholder(this.opts.placeholder??"").onChange(r=>{this.value=r}),setTimeout(()=>a?.focus(),0)}).addButton(i=>{i.setCta().setButtonText(this.opts.cta??"Create").onClick(()=>{let r=this.value.trim();r&&(this.close(),this.opts.onSubmit(r))})}),n.onkeydown=i=>{if(i.key==="Enter"){let r=this.value.trim();if(!r)return;this.close(),this.opts.onSubmit(r)}}}onClose(){this.contentEl.empty()}},f=class extends s.Plugin{async onload(){this.addCommand({id:"mindmapos-create-starter",name:"MindMap OS: Create Starter Structure",callback:async()=>{await M(this.app),new s.Notice("Starter structure created.")}}),this.addCommand({id:"mindmapos-new-task",name:"MindMap OS: New Task",callback:async()=>{new u(this.app,{title:"New Task",placeholder:"Enter task title",cta:"Create Task",onSubmit:async e=>{await K(this.app,e)}}).open()}}),this.addCommand({id:"mindmapos-new-project",name:"MindMap OS: New Project",callback:async()=>{new u(this.app,{title:"New Project",placeholder:"Enter project title",cta:"Create Project",onSubmit:async e=>{await w(this.app,"project",e)}}).open()}}),this.addCommand({id:"mindmapos-new-goal",name:"MindMap OS: New Goal",callback:async()=>{new u(this.app,{title:"New Goal",placeholder:"Enter goal title",cta:"Create Goal",onSubmit:async e=>{await w(this.app,"goal",e)}}).open()}}),this.addCommand({id:"mindmapos-new-area",name:"MindMap OS: New Area",callback:async()=>{new u(this.app,{title:"New Area",placeholder:"Enter area name",cta:"Create Area",onSubmit:async e=>{await w(this.app,"area",e)}}).open()}}),this.addCommand({id:"mindmapos-new-habit",name:"MindMap OS: New Habit",callback:async()=>{new u(this.app,{title:"New Habit",placeholder:"Enter habit name",cta:"Create Habit",onSubmit:async e=>{await w(this.app,"habit",e)}}).open()}}),this.addCommand({id:"mindmapos-new-note",name:"MindMap OS: New Note",callback:async()=>{new u(this.app,{title:"New Note",placeholder:"Enter note title",cta:"Create Note",onSubmit:async e=>{await w(this.app,"note",e)}}).open()}}),this.addCommand({id:"mindmapos-open-today",name:"MindMap OS: Open Today",callback:async()=>{let e=await $(this.app);e&&await this.app.workspace.getLeaf(!0).openFile(e)}}),new s.Notice("MindMap OS loaded \u2705")}};
